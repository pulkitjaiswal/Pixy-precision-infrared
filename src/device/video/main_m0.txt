; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\m0\main_m0.o --asm_dir=.\ --list_dir=.\ --depend=.\m0\main_m0.d --cpu=Cortex-M0 --apcs=interwork -O0 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -D__MICROLIB -DCORE_M0 -DIPC_SLAVE -DPIXY --omf_browse=.\m0\main_m0.crf main_m0.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;24     
;;;25     int main(void)
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27     	//CTIMER_DECLARE();
;;;28     #if 0
;;;29     	uint32_t memory = SRAM1_LOC;
;;;30     	uint32_t lut = SRAM1_LOC;
;;;31     
;;;32     	//while(1);
;;;33     	memset((void *)QQ_LOC, 0x01, 0x3000);
;;;34     	g_qqueue->writeIndex = 0;
;;;35     	g_qqueue->produced = 0;
;;;36     	g_qqueue->consumed = 0;
;;;37     
;;;38      	while(1)
;;;39      		getRLSFrame(&memory, &lut); 
;;;40     #endif
;;;41     	//printf("M0 start\n");
;;;42     
;;;43     	chirpOpen();
000002  f7fffffe          BL       chirpOpen
;;;44     	exec_init();
000006  f7fffffe          BL       exec_init
;;;45     	frame_init();
00000a  f7fffffe          BL       frame_init
;;;46     	rls_init();
00000e  f7fffffe          BL       rls_init
;;;47     
;;;48     	//printf("M0 ready\n");
;;;49     	exec_loop();
000012  f7fffffe          BL       exec_loop
;;;50     
;;;51     #if 0
;;;52     	while(1)
;;;53     	{
;;;54     		CTIMER_START();
;;;55     		syncM1((uint32_t *)&LPC_GPIO_PORT->PIN[1], 0x2000);
;;;56     		CTIMER_STOP();
;;;57     		
;;;58     		printf("%d\n", CTIMER_GET());
;;;59     	}	
;;;60     #endif
;;;61     #if 0
;;;62     {
;;;63     	uint32_t i;
;;;64     	uint8_t *lut = (uint8_t *)SRAM1_LOC + 0x10000;
;;;65     	uint32_t memory = SRAM1_LOC;
;;;66     	uint32_t size = SRAM1_SIZE/2;
;;;67     	for (i=0; i<0x10000; i++)
;;;68     		lut[i] = 0;
;;;69     	lut[0xb400] = 0;
;;;70     	lut[0xb401] = 1;
;;;71     	lut[0xb402] = 1;
;;;72     	lut[0xb403] = 1;
;;;73     	lut[0xb404] = 0;
;;;74     	lut[0xb405] = 1;
;;;75     	lut[0xb406] = 1;
;;;76     	lut[0xb407] = 0;
;;;77     	lut[0xb408] = 0;
;;;78     	lut[0xb409] = 0;
;;;79     
;;;80     	while(1)
;;;81      		getRLSFrame(&memory, &size, (uint32_t *)&lut);
;;;82     }
;;;83     #endif
;;;84     }
000016  2000              MOVS     r0,#0
000018  bd10              POP      {r4,pc}
                          ENDP


;*** Start embedded assembler ***

#line 1 "main_m0.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_main_m0_c_main____REV16|
#line 130 "..\\libpixy\\core_cmInstr.h"
|__asm___9_main_m0_c_main____REV16| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_main_m0_c_main____REVSH|
#line 144
|__asm___9_main_m0_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
